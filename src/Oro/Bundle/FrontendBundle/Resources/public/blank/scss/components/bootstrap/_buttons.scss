/* @theme: blank; */

.btn {
    display: inline-block;
    font-family: $btn-font-family;
    font-weight: $btn-font-weight;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    user-select: none;
    border: $btn-border-width solid transparent;
    text-decoration: none;

    @if ($btn-theme) {
        @include button-custom-variant($btn-theme...);
    }

    @include button-size($btn-padding-y, $btn-padding-x, $font-size-base, $btn-line-height, $btn-border-radius);
    @include transition($btn-transition);

    // Share hover and focus styles
    @include hover-focus {
        text-decoration: none;
    }

    &:focus,
    &.focus {
        outline: 0;
    }

    // Disabled comes first so active can properly restyle
    &.disabled,
    &:disabled {
        opacity: $btn-disabled-opacity;

        @include box-shadow(none);
    }

    // Opinionated: add "hand" cursor to non-disabled .btn elements
    &:not(:disabled):not(.disabled) {
        cursor: pointer;
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
        background-image: none;

        @include box-shadow($btn-active-box-shadow);

        &:focus {
            @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
        }
    }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
    pointer-events: none;
}

//
// Alternate buttons
//

@each $color, $values in $btn-theme-keys {
    .btn--#{$color} {
        @include button-custom-variant($values...);
    }
}

//
// Link buttons
//

// Make a button look and behave like a link
.btn--link {
    font-weight: $font-weight-normal;
    color: $link-color;
    background-color: transparent;
    border-color: transparent;

    @include hover {
        color: $link-hover-color;
        text-decoration: $link-hover-decoration;
        background-color: transparent;
        border-color: transparent;
    }

    &:focus,
    &.focus {
        text-decoration: $link-hover-decoration;
        border-color: transparent;
        box-shadow: none;
    }

    &:active,
    &.active,
    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
        background: transparent;
        color: $link-hover-color;
        border-color: transparent;
        box-shadow: none;
    }

    &:disabled,
    &.disabled {
        color: $btn-link-disabled-color;
        pointer-events: none;
    }
}

.btn--plain {
    padding: 0 3px;
    line-height: 1;
    border-color: transparent;
    background-color: transparent;
    color: get-color('additional', 'middle');
    cursor: pointer;

    @include element-state('hover') {
        background-color: transparent;
        border-color: transparent;
        color: get-color('additional', 'light');
    }

    @include element-state('focus') {
        background-color: transparent;
        border-color: transparent;
    }

    @include element-state('active') {
        box-shadow: none;
    }

    &.active,
    &.pressed {
        box-shadow: none;
    }
}

.btn--large {
    min-width: 200px;
}

//
// Button Sizes
//

.btn--size {
    &-xs {
        font-size: $base-font-size--s;
        padding: $btn-padding-y-xs $btn-padding-x-xs;

        @include border-radius($btn-border-radius-xs);
    }

    &-s {
        line-height: $btn-line-height--s;
        padding: $btn-padding-y-s $btn-padding-x-s;

        @include border-radius($btn-border-radius-s);
    }

    &-m {
        font-size: $base-font-size--large;
        padding: $btn-padding-y-m $btn-padding-x-m;

        @include border-radius($btn-border-radius-m);
    }

    &-l {
        font-size: $base-font-size--l;
        padding: $btn-padding-y-l $btn-padding-x-l;

        @include border-radius($btn-border-radius-l);
    }
}

//
// Block button
//

.btn--block {
    display: block;
    width: 100%;

    // Vertically space out multiple block buttons
    + .btn--block {
        margin-top: $btn-block-spacing-y;
    }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
    &.btn--block {
        width: 100%;
    }
}

@include breakpoint('mobile-landscape') {
    .btn {
        &--full-in-mobile {
            width: 100%;
        }
    }
}
