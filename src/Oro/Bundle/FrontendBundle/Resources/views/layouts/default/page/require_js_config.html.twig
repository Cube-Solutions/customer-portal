{% block _require_js_config_widget %}
    {% set NotMobileVersion =  not isMobileVersion() %}
    <script>
        require({
            config: {
                'controllers/page-controller': {fullRedirect: true},

                'oroui/js/app': {routeLinks: ''},
                'oroui/js/error' : {loginRoute: 'oro_customer_customer_user_security_login'},
                'oroui/js/modal': {defaults: {okButtonClass: 'btn btn--info ok'}},

                'oro/datagrid/cell/action-cell': {showCloseButton: false},
                'orodatagrid/js/app/plugins/grid/column-manager-plugin': {
                    icon: 'gear',
                    wrapperClassName: 'datagrid-manager btn-group',
                    className: 'btn btn--default btn--size-s',
                    iconHideText: true
                },
                'orodatagrid/js/datagrid/action-launcher': {iconHideText: false},
                'orodatagrid/js/datagrid/sorting/dropdown': {
                    hasSortingOrderButton: false,
                    className: 'b2b-sorting-select-control',
                    dropdownClassName: 'oro-select2__dropdown'
                },
                'orodatagrid/js/grid-views-builder': {GridViewsView: 'orofrontend/js/datagrid/grid-views/frontend-grid-views-view'},
                'orodatagrid/js/datagrid/grid-views/model': {route: 'oro_api_frontend_datagrid_gridview_post'},
                'orodatagrid/js/app/views/column-manager/column-manager-collection-view': {fallbackSelector: '.datagrid-manager__no-columns'},

                'oro/filter/abstract-filter': {
                    placeholder: null,
                    labelPrefix: !'{{ NotMobileVersion }}' ? '' : '{{ 'oro.ui.filter.by'|trans }}'
                },
                'oro/filter/select-filter': {
                    populateDefault: '{{ 'All'|trans  }}'
                },
                'oro/filter/text-filter': {notAlignCriteria: false},
                'oro/filter/date-filter': {
                    inputClass: 'input input--size-m date-visual-element'
                },
                'oro/filter/datetime-filter': {
                    inputClass: 'input input--size-m datetime-visual-element',
                    timeInputAttrs: {
                        'class': 'input input--size-m timepicker-input',
                        'placeholder': 'oro.form.choose_time'
                    }
                },
                'orofilter/js/filters-manager': {
                    dropdownContainer: '.filter-item'
                },
                'orofilter/js/filter-hint': {inline: false},
                'orofrontend/js/app/datafilter/plugins/frontend-filters-plugin': {
                    launcherOptions: {
                        className: 'btn btn--default btn--size-s' + ('{{ NotMobileVersion }}' ? ' caret' : ''),
                        iconHideText: true
                    },
                    order: 650
                },
                'orofilter/js/multiselect-decorator': {
                    additionalClass: !!'{{ NotMobileVersion }}'
                },
                'orofilter/js/datafilter-builder': {
                    FiltersManager: 'orofrontend/js/app/datafilter/frontend-collection-filters-manager',
                    enableToggleFilters: true
                },

                'oroaddress/js/region/view': {switchState: 'disable'},

                'oro/dialog-widget': {
                    messengerContainerClass: 'ui-dialog-messages'
                }
            },
            paths: {
                {% if app.debug %}
                'oro/routes': '{{ path('oro_frontend_js_routing_js', {"callback": "fos.Router.setData"}) }}'
                {% else %}
                'oro/routes': {{ asset('js/frontend_routes.js', 'routing')|json_encode|raw }}
                {% endif %}
            }
        });
        (function() {
            var appModules = requirejs.s.contexts._.config.appmodules || [];
            var removeModules = ['oroemail/js/app/modules/views-module'];
            for (var i = 0; i < removeModules.length; i++) {
                var index = appModules.indexOf(removeModules[i]);
                if (index !== -1) {
                    appModules.splice(index, 1);
                }
            }
            appModules = appModules.concat([
                'orofrontend/default/js/app/modules/input-widgets',
                'orofrontend/default/js/app/modules/zoom-disable',
                'orofrontend/default/js/app/modules/choice-filter',
                'orofrontend/default/js/app/modules/select-filter'
            ]);
            require({
                appmodules: appModules
            });
        })();
    </script>
{% endblock %}

{% block _require_js_multi_select_filter_config_widget %}
    <script>
        require({
            config: {
                'orofrontend/js/app/datafilter/frontend-multiselect-decorator': {
                    hideHeader: false,
                    themeName: 'all-at-once'
                }
            }
        });
    </script>
{% endblock %}
