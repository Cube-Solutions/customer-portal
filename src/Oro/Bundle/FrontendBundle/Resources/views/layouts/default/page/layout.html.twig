{% block root_widget %}
    {% if not oro_is_hash_navigation() %}
        <!DOCTYPE {{ doctype|default('html') }}>
        <html>
        {{ block_widget(block) }}
        </html>
    {% else %}
        {% include 'OroNavigationBundle:HashNav:hashNavAjax.html.twig' with {
            'data': {
                'content': block_widget(blocks.wrapper),
            }
        } %}
    {% endif %}
{% endblock %}

{% block _page_header_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' page-header'
    }) %}

    <div {{ block('block_attributes') }}>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _require_js_config_widget %}
    <script>
        require({
            config: {
                'oroui/js/app': {routeLinks: ''},
                'controllers/page-controller': {fullRedirect: true},
                'oroui/js/app/modules/views-module': {showLoadingMaskOnStartup: false},
                'oroui/js/error' : {loginRoute: 'oro_customer_customer_user_security_login'},
                'oro/datagrid/cell/action-cell': {showCloseButton: false},
                'orodatagrid/js/app/plugins/grid/column-manager-plugin': {
                    icon: 'gear',
                    wrapperClassName: 'column-manager btn-group',
                    className: 'btn btn--default btn--size-s',
                    iconHideText: true
                },
                'orodatagrid/js/datagrid/action-launcher': {iconHideText: false},
                'orodatagrid/js/datagrid/sorting/dropdown': {
                    hasSortingOrderButton: false,
                    className: 'b2b-sorting-select-control',
                    dropdownClassName: 'oro-select2__dropdown'
                },
                'orodatagrid/js/grid-views-builder': {
                    GridViewsView: 'orofrontend/js/datagrid/grid-views/frontend-grid-views-view'
                },
                'orodatagrid/js/datagrid/grid-views/model': {
                    route: 'oro_api_frontend_datagrid_gridview_post'
                },
                'oro/filter/abstract-filter': {
                    placeholder: null,
                    labelPrefix: '{{ 'oro.ui.filter.by'|trans  }} '
                },
                'orofilter/js/filter-hint': {inline: false},
                'oroaddress/js/region/view': {switchState: 'disable'},
                'orofilter/js/plugins/filters-toggle-plugin': {
                    launcherOptions: {
                        className: 'btn btn--default btn--size-s caret',
                        iconHideText: true
                    },
                    order: 650
                }
            }
        });
        (function() {
            var appModules = requirejs.s.contexts._.config.appmodules || [];
            var removeModules = ['oroemail/js/app/modules/views-module'];
            for (var i = 0; i < removeModules.length; i++) {
                var index = appModules.indexOf(removeModules[i]);
                if (index !== -1) {
                    appModules.splice(index, 1);
                }
            }
            appModules = appModules.concat([
                'orofrontend/default/js/app/modules/input-widgets',
                'orofrontend/default/js/app/modules/zoom-disable',
                'orofrontend/default/js/app/modules/select-filter'
            ]);
            require({
                appmodules: appModules
            });
        })();
    </script>
{% endblock %}

{% block _page_title_container_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' page-title-wrapper' ~ (class_prefix ? ' {{ class_prefix }}-page-title-wrapper')
    }) %}
    {% set content = block_widget(block)|trim %}
    {% if content|length %}
        <div{{ block('block_attributes') }}>{{ content|raw }}</div>
    {% endif %}
{% endblock %}

{% block _page_title_widget %}
    {% set additionalClasses = {
        classPrefix: class_prefix ? ' {{ class_prefix }}-page-title',
        hasActions: hasActions is defined ? ' page-title--has-actions'
    } %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' page-title' ~ additionalClasses.classPrefix ~ additionalClasses.hasActions
    }) %}
    {% set content = block_widget(block)|trim %}
    {% if content|length %}
        <h1{{ block('block_attributes') }}>
            {% if titleIcon is defined %}
            <span class="badge">
                <i class="{{ titleIcon }}"></i>
            </span>
            {% endif %}
            <span class="page-title__text">{{ content|raw }}</span>
        </h1>
    {% endif %}
{% endblock %}

{% block _notification_widget %}
    {% set attr = layout_attr_defaults(attr, {
        'id': 'flash-messages',
        '~class': ' notification-flash-container',
        'data-sticky': {
            'placeholderId': 'sticky-element-notification'
        }
    }) %}
    <div{{ block('block_attributes') }}></div>
    <script type="text/template" id="message-item-template">
        <% if (style === 'validation') { %>
            <span class="validation-<%= type %>"><%= message %></span>
        <% } else { %>
            <% iconClass = 'fa-check' %>
            <% if (type === "error" || type === "warning") {
            iconClass = 'fa-exclamation-triangle';
            }%>
            <div class="notification-flash--<%= type %> alert">
                <div class="notification-flash__badge">
                    <i class="<%= iconClass %>"></i>
                </div>
                <button class="notification-flash__close" data-dismiss="alert"><i class="fa-close"></i></button>
                <div class="notification-flash__text"><%= message %></div>
            </div>
        <% } %>
    </script>
    <script type="text/javascript">
        require(['jquery', 'oroui/js/messenger'],
            function($, messenger) {
                messenger.setup({
                    container: '#{{ attr.id }}',
                    template: _.template($.trim($('#message-item-template').html()))
                });
                {% if app.session.flashbag.peekAll|length > 0 %}
                $(function() {
                    {% for type, messages in app.session.flashbag.all %}
                        {% for message in messages %}
                            messenger.notificationFlashMessage({{ type|json_encode|raw }}, {{ message|trans|json_encode|raw }});
                        {% endfor %}
                    {% endfor %}
                });
                {% endif %}
            });
    </script>
{% endblock %}

{% block _sticky_element_notification_widget %}
    {% set attr = layout_attr_defaults(attr, {
    'id': 'sticky-element-notification'
    }) %}
    <div {{ block('block_attributes') }}>{{ block_widget(block) }}</div>
{% endblock %}

{% block _sticky_header_row_widget %}
    {% set attr = layout_attr_defaults(attr, {
    'id': 'sticky-header-row'
    }) %}
    <div {{ block('block_attributes') }}>{{ block_widget(block) }}</div>
{% endblock %}
