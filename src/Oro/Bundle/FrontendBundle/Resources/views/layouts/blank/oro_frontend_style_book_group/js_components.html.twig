{% block _style_book_grid_element_modal_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid js-component-container',
        'data-page-component-view': 'orofrontend/js/app/views/style-book-playground',
        'data-page-component-options': {
            viewConstructor: 'oroui/js/modal',
            renderAfter: 'action',
            props: {
                title: {
                    label: 'Title',
                    value: 'Confirmation'
                },
                okText: 'OK',
                cancelText: 'Cancel',
                okButtonClass: 'btn ok btn--info',
                cancelButtonClass: 'btn cancel',
                handleClose: false,
                allowCancel: true,
                allowOk: true,
                content: {
                    type: 'textarea',
                    value: 'Hello'
                }
            }
        }
    }) %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__preview">
            <button class="btn btn--info" data-action="click open">Open Modal</button>
        </div>

        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_grid_element_config_widget %}
    <div class="playground-source">
        <pre class="language-markup"><code class="style-book-group-element__code language-markup" data-config></code></pre>
    </div>

    <div class="playground-props" data-props></div>
{% endblock %}

{% block _style_book_grid_element_modal_html_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid'
    }) %}

    {% set source_code %}
        <div class="example-container">
            <button class="btn btn--info" id="modal-toggle">Open Some Modal</button>
        </div>

        <script>
            require(['jquery', 'oroui/js/modal'], function ($, Modal) {
                $('#modal-toggle').on('click', function(event) {
                    var ModalExample = new Modal({
                        title: 'Some Title',
                        okText: 'OK',
                        cancelText: 'Cancel',
                        content: 'Some content in modal'
                    });

                    ModalExample.on('ok', function(){
                        // Make some actions when user press 'OK' button
                    });

                    ModalExample.on('cancel', function(){
                        // Make some actions when user press 'Cancel' button
                    });

                    ModalExample.on('close', function(){
                        // Make some actions when user close modal window
                    });

                    ModalExample.open();
                });
            });
        </script>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-markup">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{% block _style_book_grid_element_modal_js_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        define(function(require) {
            'use strict';

            var SomeExampleView;
            var BaseView = require('oroui/js/app/views/base/view');
            var Modal = require('oroui/js/modal');

            SomeExampleView = BaseView.extend({
                /**
                 * @property
                 */
                modal: null,

                events: {
                    'click #modal-toggle': 'openModal'
                },

                initialize: function() {
                    SomeExampleView.__super__.initialize.apply(this);

                    this.modal = new Modal({
                        title: 'Some Title',
                        okText: 'OK',
                        cancelText: 'Cancel',
                        content: 'Some content in modal'
                    });
                },

                openModal: function() {
                    this.modal.on('ok', _.bind(this._onOKModal, this));
                    this.modal.on('cancel', _.bind(this._onCancelModal, this));
                    this.modal.on('close', _.bind(this._onCloseModal, this));

                    this.modal.open();
                },

                _onOKModal: function() {
                    // Make some actions when user press 'OK' button
                },

                _onCancelModal: function() {
                    // Make some actions when user press 'Cancel' button
                },

                _onCloseModal: function() {
                    // Make some actions when user close modal window
                }
            });

            return SomeExampleView;
        });
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-javascript">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{# LoadingMaskView #}

{% block _style_book_grid_element_loading_mask_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid js-component-container',
        'data-page-component-view': 'orofrontend/js/app/views/style-book-playground',
        'data-page-component-options': {
            viewConstructor: 'orofrontend/js/style-book-views/loading-mask-playground-view',
            props: {
                hideDelay: -1,
                loadingHint: 'Loading...'
            }
        }
    }) %}

    <div {{ block('block_attributes') }}>
        <div data-example-view>
            <div class="btn-group" role="group">
                <button type="button" class="btn btn--info" data-toggle>Toggle Loading</button>
                <button type="button" class="btn btn--info" data-toggle-full-page>Execute full-page loading</button>
            </div>
            <div class="view-container" data-loading-container></div>
        </div>

        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_grid_element_loading_mask_config_widget %}
    <div class="playground-source">
        <pre class="language-markup"><code class="style-book-group-element__code language-markup" data-config></code></pre>
    </div>

    <div class="playground-props" data-props></div>
{% endblock %}

{% block _style_book_grid_element_loading_mask_js_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
    define(function(require) {
        'use strict';

        var SomeExampleView;
        var BaseView = require('oroui/js/app/views/base/view');
        var LoadingMaskView = require('oroui/js/app/views/loading-mask-view');

        SomeExampleView = BaseView.extend({
            events: {
                'click [show-loading]': 'showLoading',
                'click [hide-loading]': 'hideLoading'
            },

            initialize: function() {
                SomeExampleView.__super__.initialize.apply(this);

                this.subview('loadingMask', new LoadingMaskView({
                    container: this.$('selector')
                }));
            },

            showLoading: function() {
                // Show loading mask on container after some action
                this.subview('loadingMask').show();
            },

            hideLoading: function() {
                // Hide loading mask on container after some action
                this.subview('loadingMask').hide();
            }
        });

        return SomeExampleView;
    });
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-javascript">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{% block _style_book_grid_element_loading_mask_mediator_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid'
    }) %}

    {% set source_code %}
        define(function(require) {
            'use strict';

            var SomeExampleView;
            var BaseView = require('oroui/js/app/views/base/view');
            var mediator = require('oroui/js/mediator');

            SomeExampleView = BaseView.extend({
                events: {
                    'click [show-loading]': 'showLoading',
                    'click [hide-loading]': 'hideLoading'
                },

                showLoading: function() {
                    // Show loading mask on container after some action
                    mediator.execute('showLoading');
                },

                hideLoading: function() {
                    // Hide loading mask on container after some action
                    mediator.execute('hideLoading');
                }
            });

            return SomeExampleView;
        });
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-javascript">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{# Dialog Widget #}

{% block _style_book_grid_element_dialog_widget_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid js-component-container',
        'data-page-component-view': 'orofrontend/js/app/views/style-book-playground',
        'data-page-component-options': {
            viewConstructor: 'orofrontend/js/style-book-views/style-book-dialog-widget',
            renderAfter: 'action',
            props: {
                content: {
                    type: 'textarea',
                    value: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean sagittis egestas purus a congue. Praesent non velit orci. Donec sed iaculis ipsum, id dictum sapien. Donec sollicitudin auctor magna sit amet volutpat. Nulla gravida euismod ante, at varius nisl aliquet sit amet. Vestibulum varius libero lorem, quis condimentum purus malesuada sed. Suspendisse potenti. Nam ac dolor eget mauris volutpat pretium at eu turpis. Sed ac diam a turpis fringilla luctus eu ut ipsum. Sed tempus tincidunt mauris, eu dignissim ipsum fermentum quis.'
                },
                'dialogOptions.title': 'Title'
            }
        }
    }) %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__preview">
            <button class="btn btn--info" data-action="click render">Open Dialog</button>
        </div>

        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_grid_element_dialog_widget_config_widget %}
    <div class="playground-source">
        <pre class="language-markup"><code class="style-book-group-element__code language-markup" data-config></code></pre>
    </div>

    <div class="playground-props" data-props></div>
{% endblock %}

{# Collapse Widget #}
{% block _style_book_grid_element_collapse_widget_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid js-component-container collapse-view expanded',
        'data-page-component-view': 'orofrontend/js/app/views/style-book-playground',
        'data-page-component-options': {
            viewConstructor: 'oroui/js/widget/collapse-widget',
            props: {
                hideSibling: false,
                animationSpeed: 250,
                open: true
            }
        }
    }) %}

    <div {{ block('block_attributes') }}>
        <div class="collapse-preview">
            <h3 class="collapse-preview__title" data-collapse-trigger>
                <span class="collapse-preview__icon">
                    <i class="collapse-view__trigger-icon fa-caret-right"></i>
                </span>
                Toggle Title
            </h3>

            <div class="collapse-preview__content" data-collapse-container>
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam nec laoreet nisl. Suspendisse et tincidunt libero. Aenean pulvinar quam vitae sapien porttitor, non tempor orci dictum. Mauris nisl diam, fringilla eu lectus sed, accumsan congue tellus. Cras quis dui eget dui fermentum gravida non et erat. Proin id fringilla nunc. Ut ullamcorper pulvinar ligula eu pulvinar. Nullam egestas cursus magna placerat bibendum. Nam iaculis elit ac massa bibendum, id dapibus nisl mattis.
            </div>
        </div>

        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_grid_element_collapse_widget_config_widget %}
    <div class="playground-source">
        <pre class="language-markup"><code class="style-book-group-element__code language-markup" data-config></code></pre>
    </div>

    <div class="playground-props" data-props></div>
{% endblock %}

{% block _style_book_grid_element_collapse_widget_html_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <!-- Use shortcut manager data attribute -->

        <div class="collapse-preview" data-page-component-collapse="{ options... }">
            <h3 class="collapse-preview__title" data-collapse-trigger>
                <span class="collapse-preview__icon">
                    <i class="collapse-view__trigger-icon fa-caret-right"></i>
                </span>
                Toggle Title
            </h3>

            <div class="collapse-preview__content" data-collapse-container>
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam nec laoreet nisl. Suspendisse et tincidunt libero. Aenean pulvinar quam vitae sapien porttitor, non tempor orci dictum. Mauris nisl diam, fringilla eu lectus sed, accumsan congue tellus. Cras quis dui eget dui fermentum gravida non et erat. Proin id fringilla nunc. Ut ullamcorper pulvinar ligula eu pulvinar. Nullam egestas cursus magna placerat bibendum. Nam iaculis elit ac massa bibendum, id dapibus nisl mattis.
            </div>
        </div>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-html">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{% block _style_book_grid_element_collapse_widget_js_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid'
    }) %}

    {% set source_code %}
        <script>
        define(function(require) {
            'use strict';

            var SomeExampleView;
            var BaseView = require('oroui/js/app/views/base/view');
            require('oroui/js/widget/collapse-widget');

            SomeExampleView = BaseView.extend({
                render: function() {
                    this.$el.collapseWidget({
                        // Options
                    });
                }
            });

            return SomeExampleView;
        });
        </script>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-javascript">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{# Fullscreen Popup #}

{% block _style_book_fullscreen_popup_view_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' js-component-container',
        'data-page-component-view': 'orofrontend/js/app/views/style-book-playground',
        'data-page-component-options': {
            viewConstructor: 'orofrontend/js/style-book-views/fullscreen-popup-demo-view',
            renderAfter: 'action',
            props: {
                popupIcon: 'fa-cog',
                popupBadge: true,
                popupLabel: 'Fullscreen popup',
                contentTemplate: {
                    type: 'textarea',
                    value: '<div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus id turpis quam. Sed sodales metus ac leo scelerisque eleifend. Suspendisse ullamcorper libero mauris, a imperdiet risus consequat eu. Donec imperdiet id quam id hendrerit. Ut sed bibendum massa, vitae venenatis mi. Aliquam tellus risus, faucibus vitae quam id, consectetur accumsan ipsum. Sed at venenatis mauris. Donec finibus mollis libero, eu elementum enim tempus suscipit. Praesent in consectetur mauris. Aenean tristique tellus vitae ligula tristique tincidunt. Donec aliquam dapibus imperdiet. Vestibulum sagittis libero in ipsum semper ullamcorper. Nulla vitae convallis sapien. Nulla vitae est id neque fermentum molestie vulputate ut orci.Nulla eget tellus eget mi aliquam porta. Aliquam commodo tortor sed lacinia maximus. Mauris leo odio, vestibulum ut tortor et, malesuada eleifend sapien. Vivamus efficitur sem in urna viverra porta. Cras egestas mauris eget tristique fringilla. Phasellus a molestie ante. Suspendisse vel rhoncus nisi, ut varius leo. Quisque neque dolor, ullamcorper ut sem in, venenatis iaculis purus. In at lobortis tortor. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis vel nisi id ante efficitur hendrerit bibendum porta augue. Cras ultricies bibendum lacus, non sollicitudin tellus ultricies nec. Vestibulum eget est leo. Proin non imperdiet ipsum, cursus gravida lorem. Aenean justo urna, fringilla ut pretium quis, pharetra nec velit.</div>'
                }
            }
        }
    }) %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__preview">
            <button class="btn btn--info" data-action="click render">Open Fullscreen Popup</button>
        </div>

        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_fullscreen_popup_view_config_widget %}
    <div class="playground-source">
        <pre class="language-markup"><code class="style-book-group-element__code language-markup" data-config></code></pre>
    </div>

    <div class="playground-props" data-props></div>
{% endblock %}

{% block _style_book_grid_element_fullscreen_popup_view_js_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        define(function(require) {
            'use strict';

            var SomeExampleView;
            var BaseView = require('oroui/js/app/views/base/view');
            var FullscreenPopupView = require('orofrontend/blank/js/app/views/fullscreen-popup-view');

            SomeExampleView = BaseView.extend({
                events: {
                    'click [show-popup]': 'showPopup',
                    'click [hide-popup]': 'hidePopup'
                },

                initialize: function(options) {
                    SomeExampleView.__super__.initialize.apply(this, arguments);

                    this.subview('fullscreenPopup', new FullscreenPopupView( {
                        contentSelector: '.selector' // is required or use 'contentElement', 'contentView'
                        // options...
                    } ))
                },

                showPopup: function() {
                    // Show loading mask on container after some action
                    this.subview('fullscreenPopup').show();
                },

                hidePopup: function() {
                    // Hide loading mask on container after some action
                    this.subview('fullscreenPopup').close();
                }
            });

            return SomeExampleView;
        });
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-javascript">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{# ScrollView #}

{% block _style_book_scroll_view_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid js-component-container',
        'data-page-component-view': 'orofrontend/js/app/views/style-book-playground',
        'data-page-component-options': {
            viewConstructor: 'orofrontend/js/app/views/scroll-view',
            props: {}
        }
    }) %}

    <div {{ block('block_attributes') }}>
        <div class="scroll-view" data-example-view>
            <div class="scroll-view__header">
                <div class="scroll-view__header--scrollable" data-scroll-view-follow="x">
                {% for i in 0..20 %}
                    <div class="scroll-view__head">Column - {{ i }}</div>
                {% endfor %}
                </div>
            </div>
            <div class="scroll-view__side">
                <div class="view__side--scrollable" data-scroll-view-follow="y">
                {% for i in 0..20 %}
                    <div class="scroll-view__side-head">Row - {{ i }}</div>
                {% endfor %}
                </div>
            </div>
            <div class="scroll-view__body" data-scroll-view>
                {% for i in 0..10%}
                <div class="scroll-view__row">
                    {% for j in 0..20 %}
                        <div class="scroll-view__cell">Cell - {{ i }}-{{ j }}</div>
                    {% endfor %}
                </div>
                {% endfor %}
            </div>
        </div>

        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_scroll_view_config_widget %}
    <div class="playground-source">
        <pre class="language-markup"><code class="style-book-group-element__code language-markup" data-config></code></pre>
    </div>

    <div class="playground-props" data-props></div>
{% endblock %}

{% block _style_book_grid_element_scroll_view_html_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <div data-page-component-view="orofrontend/js/app/views/scroll-view">
            <div class="scroll-view">
                <div class="scroll-view__header">
                    <div class="scroll-view__header--scrollable" data-scroll-view-follow="x">
                        <!-- Some columns in the header -->
                    </div>
                </div>
                <div class="scroll-view__side">
                    <div class="view__side--scrollable" data-scroll-view-follow="y">
                        <!-- Some columns in side -->
                    </div>
                </div>
                <div class="scroll-view__body" data-scroll-view>
                    <!-- Some scrollable content -->
                </div>
            </div>
        </div>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-javascript">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{% block _style_book_grid_element_scroll_view_js_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid'
    }) %}

    {% set source_code %}
        <script>
            define(function(require) {
                'use strict';

                var SomeExampleView;
                var BaseView = require('oroui/js/app/views/base/view');
                var ScrollView = require('orofrontend/js/app/views/scroll-view');

                SomeExampleView = BaseView.extend({
                    initialize: function() {
                        SomeExampleView.__super__.initialize.apply(this);

                        this.subview('scrollView', new ScrollView({
                            el: this.el
                        }));
                    }
                });

                return SomeExampleView;
            });
        </script>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-javascript">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{# Googlemap View #}

{% block _style_book_googlemaps_view_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid js-component-container',
        'data-page-component-view': 'orofrontend/js/app/views/style-book-playground',
        'data-page-component-options': {
            viewConstructor: 'oroaddress/js/mapservice/googlemaps',
            props: {
                apiKey: 'AIzaSyBB80MFGd4b9as7Tv3jyY5onECcM7L5MME',
                'address.address': '67800 Junkins Avenue Albany, 31707, US-GA',
                sensor: false,
                showWeather: true,
                'mapOptions.zoom': 17,
                'mapOptions.mapTypeControl': true,
                'mapOptions.panControl': false,
                'mapOptions.zoomControl': true,
            }
        }
    }) %}

    <div {{ block('block_attributes') }}>
        <div data-example-view></div>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_grid_element_googlemaps_view_config_widget %}
    <div class="playground-source">
        <pre class="language-markup"><code class="style-book-group-element__code language-markup" data-config></code></pre>
    </div>

    <div class="playground-props" data-props></div>
{% endblock %}

{% block _style_book_grid_element_googlemaps_view_html_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <!-- Use shortcut manager data attribute -->

        <div class="collapse-preview" data-page-component-collapse="{ options... }">
            <h3 class="collapse-preview__title" data-collapse-trigger>
                <span class="collapse-preview__icon">
                    <i class="collapse-view__trigger-icon fa-caret-right"></i>
                </span>
                Toggle Title
            </h3>

            <div class="collapse-preview__content" data-collapse-container>
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam nec laoreet nisl. Suspendisse et tincidunt libero. Aenean pulvinar quam vitae sapien porttitor, non tempor orci dictum. Mauris nisl diam, fringilla eu lectus sed, accumsan congue tellus. Cras quis dui eget dui fermentum gravida non et erat. Proin id fringilla nunc. Ut ullamcorper pulvinar ligula eu pulvinar. Nullam egestas cursus magna placerat bibendum. Nam iaculis elit ac massa bibendum, id dapibus nisl mattis.
            </div>
        </div>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-html">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{% block _style_book_grid_element_googlemaps_view_js_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <script>
            define(function(require) {
                'use strict';

                var SomeExampleView;
                var BaseView = require('oroui/js/app/views/base/view');
                require('oroui/js/widget/collapse-widget');

                SomeExampleView = BaseView.extend({
                    render: function() {
                        this.$el.collapseWidget({
                            // Options
                        });
                    }
                });

                return SomeExampleView;
            });
        </script>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-javascript">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{# List Slider View #}

{% block _style_book_list_slider_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid js-component-container ',
        'data-page-component-view': 'orofrontend/js/app/views/style-book-playground',
        'data-page-component-options': {
            viewConstructor: 'orofrontend/js/app/components/list-slider-component',
            props: {
                slidesToShow: 4,
                slidesToScroll: 1,
                autoplay: false,
                autoplaySpeed: 2000,
                arrows: true,
                dots: false,
                infinite: false
            }
        }
    }) %}

    <div {{ block('block_attributes') }}>
        <div class="promo-slider" data-example-view>
            <div class="promo-slider__item">
                <div class="promo-slider__picture">
                    <img class="promo-slider__img" src="/bundles/orocatalog/images/promo-slider/promo-slider-small-1.jpg" alt="Image 1" />
                </div>
            </div>

            <div class="promo-slider__item">
                <div class="promo-slider__picture">
                    <img class="promo-slider__img" src="/bundles/orocatalog/images/promo-slider/promo-slider-small-2.jpg" alt="Image 1" />
                </div>
            </div>

            <div class="promo-slider__item">
                <div class="promo-slider__picture">
                    <img class="promo-slider__img" src="/bundles/orocatalog/images/promo-slider/promo-slider-small-3.jpg" alt="Image 1" />
                </div>
            </div>

            <div class="promo-slider__item">
                <div class="promo-slider__picture">
                    <img class="promo-slider__img" src="/bundles/orocatalog/images/promo-slider/promo-slider-small-1.jpg" alt="Image 1" />
                </div>
            </div>

            <div class="promo-slider__item">
                <div class="promo-slider__picture">
                    <img class="promo-slider__img" src="/bundles/orocatalog/images/promo-slider/promo-slider-small-2.jpg" alt="Image 1" />
                </div>
            </div>

            <div class="promo-slider__item">
                <div class="promo-slider__picture">
                    <img class="promo-slider__img" src="/bundles/orocatalog/images/promo-slider/promo-slider-small-3.jpg" alt="Image 1" />
                </div>
            </div>
        </div>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_grid_element_list_slider_config_widget %}
    <div class="playground-source">
        <pre class="language-markup"><code class="style-book-group-element__code language-markup" data-config></code></pre>
    </div>

    <div class="playground-props" data-props></div>
{% endblock %}

{% block _style_book_grid_element_list_slider_html_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <!-- Use shortcut manager data attribute -->

        <div class="collapse-preview" data-page-component-collapse="{ options... }">
            <h3 class="collapse-preview__title" data-collapse-trigger>
                <span class="collapse-preview__icon">
                    <i class="collapse-view__trigger-icon fa-caret-right"></i>
                </span>
                Toggle Title
            </h3>

            <div class="collapse-preview__content" data-collapse-container>
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam nec laoreet nisl. Suspendisse et tincidunt libero. Aenean pulvinar quam vitae sapien porttitor, non tempor orci dictum. Mauris nisl diam, fringilla eu lectus sed, accumsan congue tellus. Cras quis dui eget dui fermentum gravida non et erat. Proin id fringilla nunc. Ut ullamcorper pulvinar ligula eu pulvinar. Nullam egestas cursus magna placerat bibendum. Nam iaculis elit ac massa bibendum, id dapibus nisl mattis.
            </div>
        </div>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-html">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{% block _style_book_grid_element_list_slider_js_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <script>
            define(function(require) {
                'use strict';

                var SomeExampleView;
                var BaseView = require('oroui/js/app/views/base/view');
                require('oroui/js/widget/collapse-widget');

                SomeExampleView = BaseView.extend({
                    render: function() {
                        this.$el.collapseWidget({
                            // Options
                        });
                    }
                });

                return SomeExampleView;
            });
        </script>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-javascript">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{# DOM Relocation View #}

{% block _style_book_dom_relocation_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid js-component-container ',
        'data-page-component-view': 'orofrontend/js/app/views/style-book-playground',
        'data-page-component-options': {
            viewConstructor: 'orofrontend/js/style-book-views/style-book-dom-relocation',
            props: {}
        }
    }) %}

    <div {{ block('block_attributes') }}>
        <div class="dom-relocation-example" data-example-view>
            <button data-relocation-trigger class="btn btn--info">Trigger Move</button>

            <div class="dom-relocation">
                <div class="dom-relocation-point">
                    <div data-relocate>Relocated Element</div>
                </div>
                <div class="dom-relocation-target"></div>
            </div>
        </div>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_grid_element_dom_relocation_html_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid'
    }) %}

    {% set source_code %}
        <!-- Add view somewhere on page -->
        <div data-page-component-view="orofrontend/js/app/views/dom-relocation-view"></div>

        <!-- Define moved element options -->
        {% set attr =  layout_attr_defaults(attr, {
            '~class': ' some-element',
            'data-dom-relocation-options': {
                responsive: [
                    {
                        viewport: {
                            maxScreenType: 'tablet',
                        },
                        moveTo: '[data-target-container]'
                    }
                ]
            }
        }) %}

        <div class="some-element" data-dom-relocation-options='{"responsive":[{"viewport":{"maxScreenType":"tablet"},"moveTo":"[data-target-container]"}]}'>Some content...</div>

        <!-- Define target element -->

        <div data-target-container>
            <!-- The item will be moved inside this container -->
        </div>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-html">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{# Sticky Panel View #}

{% block _style_book_sticky_panel_view_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid js-component-container ',
        'data-page-component-view': 'orofrontend/js/app/views/style-book-playground',
        'data-page-component-options': {
            viewConstructor: 'orofrontend/js/style-book-views/style-book-sticky-panel-view',
            props: {}
        }
    }) %}

    <div {{ block('block_attributes') }}>
        <div class="sticky-panel-example" data-example-view>
            <button class="btn btn--info" data-toggle>On sticky</button>
            <div class="sticky-panel-box" data-move-to-sticky>
                That content will be move to sticky panel...
            </div>
        </div>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_grid_element_sticky_panel_view_html_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid'
    }) %}

    {% set source_code %}
        <!-- Define data attribute for sticky element -->
        'data-sticky': {
        'autoWidth': true,
        'toggleClass': 'sticked',
        'placeholderId': 'style-book-sticky-header'
        },
        'data-sticky-target': 'top-sticky-panel'

        <div class="some-box">
            Content that should be sticky
        </div>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-html">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{# Mediator #}

{% block _style_book_grid_element_mediator_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid'
    }) %}

    <div {{ block('block_attributes') }}>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_mediator_common_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <script>
            // Call execute to show loading
            mediator.execute('showLoading');

            // Call execute to hide loading
            mediator.execute('hideLoading');

            // Call execute to redirect url
            mediator.execute('redirectTo',
                {
                    url: 'route_url' // URL
                },
                {
                    redirect: true // true/false
                }
            );

            // Refresh page
            mediator.execute('refreshPage');

            mediator.execute('layout:enablePageScroll');
            mediator.execute('layout:disablePageScroll', $someElement);

            mediator.execute('adjustTitle', 'Page title', true);

            mediator.trigger('page:afterChange');
            mediator.trigger('page:beforeChange');

            // Layouts
            mediator.trigger('layout:adjustHeight');
            mediator.trigger('layout:reposition');

            // Shopping lists
            mediator.trigger('checkout:shipping-method:rendered');
            mediator.trigger('shopping-list:refresh');
            mediator.on('shopping-list:line-items:update-response', callback(model, response));

            // Line Items
            mediator.on('line-items-totals:update', callback(), context);
            mediator.on('order:totals:get:current', callback(totalsData));
            mediator.on('line-items-init', callback(lineItems));

            // Checkout
            mediator.on('checkout:payment:method:refresh', callback());
            mediator.on('checkout:payment:validate:change', callback(state));
            mediator.on('checkout:payment:validate:get-value', callback(validateValueObject));
            mediator.on('checkout:payment:save-for-later:change', callback());

            // Pricing
            mediator.on('totals:update', callback(totals));
            mediator.on('line-items-totals:update', callback());
            mediator.on('pricing:collect:line-items', callback(items));
            mediator.on('pricing:load:products-tier-prices', callback(productId, cb));

            // Product
            mediator.on('autocomplete:productFound', callback(item));
            mediator.on('autocomplete:productNotFound', callback(item));
            mediator.on('product:precision:add', callback(data));
            mediator.on('product:precision:remove', callback(data));

            mediator.on('layout-subtree:update:product', callback({layoutSubtreeUrl, layoutSubtreeCallback}));
            mediator.on('unitChanged', callback());

            mediator.on('product:quantity-unit:update', callback(value));

            // Widgets
            mediator.on('widget_success:' + widgetAlias, callback(options));
            mediator.trigger('widget:doRefresh:' + widgetAlias);

            mediator.on('widget_dialog:close', callback(context));
            mediator.on('widget_dialog:open', callback(context));
            mediator.on('widget_dialog:stateChange', callback(context, data));

        </script>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-javascript">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{% block _style_book_mediator_grid_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <script>
            mediator.trigger('datagrid:doRefresh' + datagridName);
            mediator.on('datagrid:doRefresh' + datagridName,  callback(ignoreVisibility));

            mediator.trigger('datagrid:setParam:' + datagridName, 'someValueKey', 'someValue');
            mediator.on('datagrid:setParam:' + datagridName, callback(param, value));

            mediator.trigger('datagrid:removeParam:' + datagridName, 'someValueKey');
            mediator.on('datagrid:removeParam:' + datagridName, callback(param));

            mediator.trigger('datagrid:rendered', gridInstanse);
            mediator.trigger('datagrid:doReset:' + datagridName);

            mediator.trigger('datagrid:beforeRemoveRow:' + datagridName, model);
            mediator.on('datagrid:beforeRemoveRow:' + datagridName, callback(model));
            mediator.trigger('datagrid:afterRemoveRow:' + datagridName);
            mediator.on('datagrid:afterRemoveRow:' + datagridName, callback());

            mediator.trigger('datagrid:afterMassRemoveRow:' + datagridName);

            mediator.on('change:' + datagridName, callback(appendedIds, removedIds));
            // Frontend mass actions execute
            mediator.trigger('datagrid:mass:frontend:execute:' + datagridName);
            mediator.trigger('get-selected-products-mass-action-run:' + datagridName);
        </script>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-javascript">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{% block _style_book_mediator_message_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <script>
            /**
             * Execute to show info message
             * @type 'error', 'success', 'info'
             */
            mediator.execute('showFlashMessage', 'type', 'Text message');
            // or
            mediator.execute('showMessage', 'type', 'Text message');

        </script>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-javascript">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{# Popup Gallery Widget #}

{% block _style_book_grid_element_popup_gallery_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid js-component-container ',
        'data-page-component-view': 'orofrontend/js/app/views/style-book-playground',
        'data-page-component-options': {
            viewConstructor: 'orofrontend/js/style-book-views/style-book-popup-gallery-widget',
            props: {
                use_thumb: true,
                'imageOptions.slidesToShow': 1,
                'imageOptions.slidesToScroll': 1,
                'imageOptions.fade': true,
                'imageOptions.arrows': true,
                'imageOptions.asNavFor': '.popup-gallery-widget__thumbnails',
                'imageOptions.lazyLoad': 'progressive',
                'imageOptions.infinite': false,
                'navOptions.slidesToShow': 4,
                'navOptions.slidesToScroll': 1,
                'navOptions.asNavFor': '.popup-gallery-widget__images',
                'navOptions.focusOnSelect': true,
                'navOptions.infinite': false,
                'navOptions.arrows': true
            }
        }
    }) %}

    <div {{ block('block_attributes') }}>
        <div data-example-view>
            <div class="popup-gallery" data-trigger-gallery-open>
                <img class="promo-slider__img" src="/bundles/orocatalog/images/promo-slider/promo-slider-small-1.jpg" alt="Image 1" />
            </div>
        </div>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_grid_element_popup_gallery_config_widget %}
    <div class="playground-source">
        <pre class="language-markup"><code class="style-book-group-element__code language-markup" data-config></code></pre>
    </div>

    <div class="playground-props" data-props></div>
{% endblock %}

{% block _style_book_grid_element_popup_gallery_html_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <!--
        set options = {
            use_thumb: true,
            galleryImages: [{
                src: 'src_to_original_image',
                thumb: 'src_to_thumbnail_image',
                alt: 'Image alt text'
            }],
            imageOptions: {
                slidesToShow: 1,
                slidesToScroll: 1,
                fade: true,
                arrows: false,
                asNavFor: '.product-view-media-gallery__nav',
                lazyLoad: 'progressive',
                infinite: false,
                relatedComponent: 'zoom'
            },
            navOptions: {
                slidesToShow: 4,
                slidesToScroll: 1,
                asNavFor: '.product-view-media-gallery',
                focusOnSelect: true,
                infinite: false,
                arrows: true
            }
        }

        set popupGalleryAttr = {
            'data-page-component-module': 'orofrontend/js/app/components/popup-gallery-widget',
            'data-page-component-options': options|json_encode,
        }

        --->
        <div class="popup-gallery" >
            <div data-trigger-gallery-open data-page-component-module="orofrontend/js/app/components/popup-gallery-widget" data-page-component-options="options|json_encode">
                <img src="url_path" alt="Alt">
            </div>
        </div>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-html">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{% block _style_book_grid_element_popup_gallery_js_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        define(function(require) {
            'use strict';

            var SomeExampleView;
            var BaseView = require('oroui/js/app/views/base/view');
            var PopupGalleryWidget = require('orofrontend/js/app/components/popup-gallery-widget');

            SomeExampleView = BaseView.extend({
                popupGallery: {
                    use_thumb: true,
                    galleryImages: [
                        {
                            thumb: 'url_to_image_thumbnail',
                            src: 'url_to_image_original',
                            alt: 'Image alt text'
                        },
                        ...
                    ],
                    imageOptions: {
                        slidesToShow: 1,
                        slidesToScroll: 1,
                        fade: true,
                        arrows: true,
                        asNavFor: '.popup-gallery-widget__thumbnails',
                        lazyLoad: 'progressive',
                        infinite: false
                    },
                    navOptions: {
                        slidesToShow: 4,
                        slidesToScroll: 1,
                        asNavFor: '.popup-gallery-widget__images',
                        focusOnSelect: true,
                        infinite: false,
                        arrows: true
                    }
                },

                initialize: function(options) {
                    SomeExampleView.__super__.initialize.apply(this, arguments);

                    this.subview('popupGallery', new PopupGalleryWidget(this.popupOptions))
                }
            });

            return SomeExampleView;
        });
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-javascript">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{# ViewportManager #}

{% block _style_book_grid_element_viewport_manager_widget %}

    <div {{ block('block_attributes') }}>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_grid_element_viewport_manager_require_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <script>
            require({
                config: {
                    'oroui/js/viewport-manager': {
                        screenMap: [
                            {
                                name: 'desktop',
                                max: Infinity
                            },
                            {
                                name: 'tablet',
                                max: 1099
                            },
                            {
                                name: 'tablet-small',
                                max: 992
                            },
                            {
                                name: 'mobile-landscape',
                                max: 640
                            },
                            {
                                name: 'mobile',
                                max: 414
                            }
                        ]
                    }
                }
            });
        </script>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-html">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{% block _style_book_grid_element_viewport_manager_js_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <script>
        define(function(require) {
            'use strict';

            var SomeExampleView;
            var BaseView = require('oroui/js/app/views/base/view');
            var viewportManager = require('oroui/js/viewport-manager');

            SomeExampleView = BaseView.extend({
                viewport: null,

                initialize: function(options) {
                    SomeExampleView.__super__.initialize.apply(this, arguments);

                    this.viewport = viewportManager.getViewport();
                },

                render: function() {
                    // Call somewhere if need check responsive rules
                    if (this.viewport.isApplicable({ maxScreenType: 'tablet' })) {
                        // Do something
                    }

                    if (this.viewport.isApplicable({ minScreenType: 'mobile' })) {
                        // Do something
                    }
                }
            });

            return SomeExampleView;
        });
        </script>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-javascript">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{# Lazy Init View #}

{% block _style_book_grid_element_lazy_init_widget %}

    <div {{ block('block_attributes') }}>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_grid_element_lazy_init_html_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <div data-layout="separate" data-page-component-view="oroproduct/js/app/datagrid/datagrid-product-lazy-init-view">

            <!-- Views should be initialize when user scroll to that views -->
            <div data-page-component-view="path/to/some/view"></div>

            <div data-page-component-view="path/to/some/view1"></div>

            <div data-page-component-view="path/to/some/view2"></div>

        </div>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-html">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{# Input Widget Number #}

{% block _style_book_input_widget_number_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid js-component-container ',
        'data-page-component-view': 'orofrontend/js/app/views/style-book-playground-widgets',
        'data-page-component-options': {
            viewConstructor: 'oroui/js/app/views/input-widget/number',
            widget: true,
            props: {
                precision: 2
            }
        }
    }) %}

    <div {{ block('block_attributes') }}>
        <div class="form-row" data-example-view>
            <label class="label label--full required" for="form_text-number">Number Widget field</label>
            <input type="number" id="form_text-number" data-precision="3" name="form[text]" required="required" data-ftid="form_text" data-name="field__text" class=" form-field-text input input--full" placeholder="" />
        </div>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_grid_element_input_widget_number_html_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <div class="form-row">
            <label class="label label--full required" for="form_text-number">Number Widget field</label>
            <input type="number" id="form_text-number" data-precision="3" name="form[text]" required="required" data-ftid="form_text" data-name="field__text" class=" form-field-text input input--full" placeholder="" />
        </div>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-html">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{% block _style_book_grid_element_input_widget_number_js_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        define(function(require) {
        'use strict';

        var SomeExtensionNumberInputWidget;
        var NumberInputWidget = require('oroui/js/app/views/input-widget/number');

        SomeExtensionNumberInputWidget = NumberInputWidget.extend({
        // Extend properties
        allowZero: false,

        precision: 2, // Data attribute more priority

        // Extend widget functionality
        _normalizeNumberFieldValue: function(event) {
        SomeExtensionNumberInputWidget.__super__._normalizeNumberFieldValue.apply(this, arguments)

        // Make some ...
        }
        });

        return SomeExtensionNumberInputWidget;
        });
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-javascript">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{# Select2 Widget Number #}

{% block _style_book_input_widget_select2_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid js-component-container ',
        'data-page-component-view': 'orofrontend/js/app/views/style-book-playground-widgets',
        'data-page-component-options': {
            viewConstructor: 'oroui/js/app/views/input-widget/select2',
            props: {
                'initializeOptions.placeholder': 'Test',
                'initializeOptions.minimumInputLength': 0,
                'initializeOptions.minimumResultsForSearch': 7
            }
        }
    }) %}

    <div {{ block('block_attributes') }}>
        <div class="form-row" >
            <label class="label label--full required" for="form_select-select2">Select2 Widget Number</label>

            <select data-example-view id="form_select-select2" name="form[select]" class="select select--full" data-ftid="form_select" data-name="field__select" placeholder="" >
                <option></option>
                {% for letter in 'a'..'z' %}
                    <option value="{{ letter }}">Option {{ letter|upper }}</option>
                {% endfor %}
            </select>
        </div>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _style_book_grid_element_input_widget_select2_config_widget %}
    <div class="playground-source">
        <pre class="language-markup"><code class="style-book-group-element__code language-markup" data-config></code></pre>
    </div>

    <div class="playground-props" data-props></div>
{% endblock %}

{% block _style_book_grid_element_input_widget_select2_html_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <div class="form-row" >
            <label class="label label--full required" for="form_select-select2">Select2 Widget Number</label>

            <select data-example-view id="form_select-select2" name="form[select]" class="select select--full" data-ftid="form_select" data-name="field__select" placeholder="">
                <option></option>
                {% for letter in 'a'..'z' %}
                    <option value="{{ letter }}">Option {{ letter|upper }}</option>
                {% endfor %}
            </select>
        </div>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-html">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{% block _style_book_grid_element_zoom_widget_widget %}

    {% set attr = layout_attr_defaults(attr, {
        '~class': ' grid js-component-container style-book-zoom',
        'data-page-component-view': 'orofrontend/js/app/views/style-book-playground-widgets',
        'data-page-component-options': {
            viewConstructor: 'orofrontend/js/style-book-views/style-book-zoom-widget-view',
            props: {
                scrollZoom: true,
                zoomWindowPosition: 'zoom-container',
                minZoomWindowWidth: 376,
                maxZoomWindowWidth: 700,
                zoomWindowWidth: 376,
                zoomWindowHeight: 376,
                zoomWindowFadeIn: 400,
                zoomLevel: 0.4,
                maxZoomLevel: 0.8,
                borderSize: 1,
                borderColour: '#ebebeb',
                lensBorderColour: '#7d7d7d',
                lensColour: '#000',
                lensOpacity: 0.22
            }
        }
    }) %}

   <div {{ block('block_attributes') }}>
       <img data-example-view class="product-view-media-gallery__image"
            alt="Image"
            data-zoom-image="/bundles/orocatalog/images/promo-slider/promo-slider-small-2.jpg"
            src="/bundles/orocatalog/images/promo-slider/promo-slider-small-2.jpg"
            itemprop="image"
            data-lazy="/bundles/orocatalog/images/promo-slider/promo-slider-small-2.jpg"
            />
       <div id="zoom-container"></div>
       {{ block_widget(block) }}
   </div>
{% endblock %}

{% block _style_book_grid_element_zoom_widget_html_widget %}
    {% set attr = layout_attr_defaults(attr, {
    '~class': ' grid'
    }) %}

    {% set source_code %}
        <!-- Use shortcut manager data attribute -->

        <!--
        set options = {
            viewport: {
                minScreenType: 'desktop'
            },
            widgetModule: 'oroproduct/js/widget/zoom-widget',

            ... options
        } %}
        -->

       <div>
           <img class="product-view-media-gallery__image"
                alt="Image"
                data-zoom-image="path/to/zoomimg/image"
                src="path/to/origin/image"
                data-page-component-viewport="<!-- options|json_encode -->"
                itemprop="image"
                data-lazy="path/to/lazy/image"
                />
           <div id="zoom-container"></div>
       </div>
    {% endset %}

    <div {{ block('block_attributes') }}>
        <div class="style-book-group-element__source">
            <pre>
                <code class="style-book-group-element__code language-html">
                    {{ source_code|trim|escape }}
                </code>
            </pre>
        </div>
    </div>
{% endblock %}

{% block _style_book_zooo_widget_config_widget %}
    <div class="playground-source">
        <pre class="language-markup"><code class="style-book-group-element__code language-markup" data-config></code></pre>
    </div>

    <div class="playground-props" data-props></div>
{% endblock %}
